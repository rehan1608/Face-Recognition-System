from tkinter import*
from tkinter import ttk
from PIL import Image, ImageTk
from tkinter import messagebox
import mysql.connector
import cv2
import os
import numpy as np



class Train:
    def __init__(self, root):
        self.root = root
        self.root.geometry = ("1366x768+0+0")
        self.root.title("Training Data")

        title_lbl = Label(self.root, text="TRAIN DATA SET",
                          font=("times new roman", 35, "bold"), bg="white", fg="darkred")
        title_lbl.place(x=0, y=0, width=1366, height=38)

        img_top = Image.open(
            r"D:\face\clg_img\img\train_data.jpg")
        img_top = img_top.resize((455, 200), Image.ANTIALIAS)
        self.photoimage_top = ImageTk.PhotoImage(img_top)

        top_lbl = Label(self.root, image=self.photoimage_top)
        top_lbl.place(x=0, y=40, width=455, height=200)

        img2_top = Image.open(
            r"D:\face\clg_img\img\facialrecognition.png")
        img2_top = img2_top.resize((455, 200), Image.ANTIALIAS)
        self.photoimage_top2 = ImageTk.PhotoImage(img2_top)

        top2_lbl = Label(self.root, image=self.photoimage_top2)
        top2_lbl.place(x=455, y=40, width=455, height=200)

        img_top1 = Image.open(
            r"D:\face\clg_img\img\facial_recognition.jpg")
        img_top1 = img_top1.resize((455, 200), Image.ANTIALIAS)
        self.photoimage_top1 = ImageTk.PhotoImage(img_top1)

        top1_lbl = Label(self.root, image=self.photoimage_top1)
        top1_lbl.place(x=910, y=40, width=455, height=200)

        but1 = Button(self.root, text="CLICK TO TRAIN DATA", command=self.training_data, cursor="hand2", font=("times new roman", 30, "bold"), bg="darkblue",
                      fg="white")
        but1.place(x=0, y=240, width=1366, height=60)

        img_bottom = Image.open(
            r"D:\face\clg_img\img\photosss.jpg")
        img_bottom = img_bottom.resize((455, 445), Image.ANTIALIAS)
        self.photoimage_bottom = ImageTk.PhotoImage(img_bottom)

        bottom_lbl = Label(self.root, image=self.photoimage_bottom)
        bottom_lbl.place(x=0, y=300, width=455, height=445)

        img1_bottom = Image.open(
            r"D:\face\clg_img\img\photosss.jpg")
        img1_bottom = img1_bottom.resize((455, 445), Image.ANTIALIAS)
        self.photoimage_bottom1 = ImageTk.PhotoImage(img1_bottom)

        bottom_lbl1 = Label(self.root, image=self.photoimage_bottom1)
        bottom_lbl1.place(x=455, y=300, width=455, height=445)

        img2_bottom = Image.open(
            r"D:\face\clg_img\img\photosss.jpg")
        img2_bottom = img2_bottom.resize((455, 445), Image.ANTIALIAS)
        self.photoimage_bottom2 = ImageTk.PhotoImage(img2_bottom)

        bottom_lbl2 = Label(self.root, image=self.photoimage_bottom2)
        bottom_lbl2.place(x=910, y=300, width=455, height=445)

    def training_data(self):
        data_dir = (r"C:\Users\HP\face_recognition_system\images_taken")
        path = [os.path.join(data_dir, file) for file in os.listdir(data_dir)]

        images = []
        ids = []
        for image in path:
            img = Image.open(image).convert('L')
            img_np = np.array(img, 'uint8')
            id = int(os.path.split(image)[1].split('.')[1])

            images.append(img_np)
            ids.append(id)

            cv2.imshow("Training", img_np)
            cv2.waitKey(1) == 13
        ids = np.array(ids)

        # train the classifier and save
        clla_sifier = cv2.face.LBPHFaceRecognizer_create()
        clla_sifier.train(images, ids)
        clla_sifier.write("Classifier.xml")
        cv2.destroyAllWindows()
        messagebox.showinfo("Success", "Training data completed")


if __name__ == "__main__":
    root = Tk()
    obj = Train(root)
    root.mainloop()
